import praw
import prawcore  # Import prawcore library for error handling
import time

# Function to handle exceptions without waiting
def handle_exception(e):
    if isinstance(e, prawcore.exceptions.ResponseException) and e.response.status_code == 429:
        print("Rate limited by Reddit API. Ignoring error.")
    else:
        print(f"Exception encountered: {str(e)}")

reddit = praw.Reddit(client_id='',
                     client_secret='',
                     username='',
                     password='',
                     user_agent='') 

timers = {}  # Create an empty dictionary to store the start time for each reported item

try:
    while True:
        for item in reddit.subreddit('').mod.modqueue():
            if item.num_reports == 1 and item.id not in timers:  # Only start timer for new reported items
                created_time = item.created_utc
                timers[item.id] = time.time()  # Store start time for this item in the timers dictionary
                print(f"Starting timer for post {item.id}...")

            if item.id in timers:  # Check if there is an ongoing timer for this item
                start_time = timers[item.id]
                time_diff = time.time() - start_time
                if time_diff >= 3600:
                    try:
                        item.mod.approve()
                        print(f"Approved post {item.id} after 2 minutes with one report")
                        del timers[item.id]  # Remove the item from the timers dictionary once it is approved
                    except prawcore.exceptions.ServerError as e:
                        handle_exception(e)
                else:
                    new_reports = item.report_reasons
                    if new_reports != item.report_reasons:  # Check if there are new reports for this item
                        print(f"New reports for post {item.id}, leaving post in mod queue")
                        del timers[item.id]  # Remove the item from the timers dictionary if there are new reports
                    else:
                        time_remaining = int(start_time + 3600 - time.time())
                        print(f"Time remaining for post {item.id}: {time_remaining} seconds")

        time.sleep(1)

except Exception as e:
    handle_exception(e)


